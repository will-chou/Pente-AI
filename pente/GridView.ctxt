#BlueJ class context
comment0.params=rows\ cols\ cellSize\ observeObj
comment0.target=GridView(int,\ int,\ int,\ java.util.Observable)
comment0.text=\r\n\ Creates\ a\ new\ GridView\ with\ the\ given\ number\ of\ rows,\ columns.\ Grid\ lines\r\n\ are\ set\ to\ visible\ with\ a\ thickness\ of\ 1.\ The\ Dimension\ of\ this\ GridView\r\n\ is\ calculated\ and\ set\ to\ (cols*cellSize)\ x\ (rows*cellSize)\ plus\ the\ space\r\n\ the\ grid\ lines\ take\ up.\r\n\ \r\n\ @param\ rows\ The\ number\ of\ rows\ in\ this\ GridView\r\n\ @param\ cols\ The\ number\ of\ columns\ in\ this\ GridView\r\n\ @param\ cellSize\ The\ size\ in\ pixels\ of\ each\ cell\r\n\ @param\ observeObj\ An\ Observable\ object\ that\ updates\ this\ view\r\n
comment1.params=rows\ cols\ cellSize\ gridLineThickness\ observeObj
comment1.target=GridView(int,\ int,\ int,\ int,\ java.util.Observable)
comment1.text=\r\n\ Creates\ a\ new\ GridView\ with\ the\ given\ number\ of\ rows,\ columns\ and\ grid\r\n\ lines\ turned\ on\ with\ the\ given\ thickness.\ The\ Dimension\ of\ this\ GridView\r\n\ is\ calculated\ and\ set\ to\ (cols*cellSize)\ x\ (rows*cellSize)\ plus\ the\ space\r\n\ the\ grid\ lines\ take\ up.\r\n\ \r\n\ @param\ rows\ The\ number\ of\ rows\ in\ this\ GridView\r\n\ @param\ cols\ The\ number\ of\ columns\ in\ this\ GridView\r\n\ @param\ cellSize\ The\ size\ in\ pixels\ of\ each\ cell\r\n\ @param\ gridLineThickness\ The\ thickness\ in\ pixels\ of\ the\ grid\ lines\r\n\ @param\ observeObj\ An\ Observable\ object\ that\ updates\ this\ view\r\n
comment10.params=gridLineThickness
comment10.target=void\ setGridLineThickness(int)
comment10.text=\r\n\ Sets\ the\ thickness\ of\ the\ grid\ lines\ in\ pixels\ and\ updates\ the\ display.\r\n\ @param\ gridLineThickness\ Thickness\ of\ the\ grid\ lines\ in\ pixels.\r\n
comment11.params=newState
comment11.target=void\ showGridLines(boolean)
comment11.text=\r\n\ Makes\ grid\ lines\ visible\ and\ updates\ the\ display.\r\n\ @param\ newState\ Whether\ or\ not\ grid\ lines\ should\ be\ visible\r\n
comment12.params=
comment12.target=void\ clear()
comment12.text=\r\n\ Clears\ the\ objects\ in\ this\ grid\r\n
comment13.params=
comment13.target=int\ getNumObjects()
comment13.text=\r\n\ Returns\ the\ number\ of\ objects\ in\ this\ grid.\r\n\ @return\ The\ number\ of\ objects\ in\ this\ grid.\r\n
comment14.params=g
comment14.target=void\ drawCellObjects(java.awt.Graphics)
comment14.text=\r\n\ Draws\ a\ GridObject,\ which\ is\ an\ object\ that\ knows\ its\ own\ image\ (a\ BufferedImage)\ and\ its\ own\ location\r\n\ @param\ g\ Graphics\ context\ for\ the\ current\ GridView\r\n
comment15.params=col
comment15.target=int\ colToXCoord(int)
comment15.text=\r\n\ Converts\ a\ column\ value\ into\ an\ x-coordinate\ for\ the\ upper\ left\ corner\ of\ this\ cell\r\n\ @param\ col\ Column\ to\ convert\ into\ an\ x-coordinate\r\n\ @return\ The\ x-coordinate\ where\ the\ specified\ column\ begins.\r\n
comment16.params=row
comment16.target=int\ rowToYCoord(int)
comment16.text=\r\n\ Converts\ a\ row\ value\ into\ a\ y-coordinate\ for\ the\ upper\ left\ corner\ of\ this\ cell\r\n\ @param\ row\ Row\ to\ convert\ into\ a\ y-coordinate\r\n\ @return\ The\ y-coordinate\ where\ the\ specified\ row\ begins.\r\n
comment17.params=x
comment17.target=int\ xCoordToCol(int)
comment17.text=\r\n\ Converts\ an\ x-coordinate\ into\ a\ column.\r\n\ @param\ x\ An\ x-coordinate\ to\ convert\ into\ a\ column\ value.\r\n\ @return\ The\ column\ that\ contains\ the\ given\ x-coordinate.\r\n
comment18.params=y
comment18.target=int\ yCoordToRow(int)
comment18.text=\r\n\ Converts\ a\ y-coordinate\ into\ a\ row.\r\n\ @param\ y\ A\ y-coordinate\ to\ convert\ into\ a\ row\ value.\r\n\ @return\ The\ row\ that\ contains\ the\ given\ y-coordinate.\r\n
comment19.params=go
comment19.target=void\ fillNextSpot(GridObject)
comment19.text=\r\n\ Fills\ the\ GridView\ one\ by\ one\ in\ row\ major\ order\r\n\ @param\ go\ A\ GridObject\ to\ fill\ the\ next\ available\ cell\ in\ this\ GridView.\r\n
comment2.params=img
comment2.target=void\ setBackground(java.awt.image.BufferedImage)
comment2.text=\r\n\ Sets\ the\ background\ of\ this\ GridView\ to\ the\ specified\ image.\r\n\ The\ image\ automatically\ scales\ to\ the\ size\ of\ the\ GridView.\r\n\ @param\ img\ The\ new\ background\ of\ this\ GridView.\r\n
comment20.params=o\ arg
comment20.target=void\ update(java.util.Observable,\ java.lang.Object)
comment20.text=\r\n\ Notification\ method\ called\ automatically\ by\ any\ objects\ this\ GridView\ is\ observing.\r\n\ When\ an\ observed\ object\ is\ modified,\ it\ lets\ us\ know\ and\ calls\ this\ method.\r\n\ @param\ o\ An\ object\ we\ are\ observing\r\n\ @param\ arg\ An\ optional\ parameter\ given\ to\ use\ by\ the\ observed\ object\r\n
comment21.params=listener\ listener2
comment21.target=void\ addBoardListeners(java.awt.event.MouseListener,\ java.awt.event.MouseMotionListener)
comment21.text=\r\n\ Allows\ us\ to\ have\ our\ Mouse\ Listeners\ outside\ of\ this\ class.\r\n\ @param\ listener\ MouseListener\ that\ will\ listen\ to\ this\ GridView\r\n\ @param\ listener2\ MouseMotionListener\ that\ will\ listen\ to\ this\ GridView\r\n
comment22.params=g
comment22.target=void\ paintComponent(java.awt.Graphics)
comment22.text=\r\n\ Called\ automatically\ by\ the\ system\ when\ repainting\ this\ component\ is\ needed.\r\n\ If\ you\ need\ to\ update\ the\ display,\ call\ repaint()\ instead\ of\ this.\r\n\ @param\ g\ Graphics\ context\ for\ this\ component.\r\n
comment3.params=
comment3.target=int\ getCellSize()
comment3.text=\r\n\ Returns\ the\ width\ of\ each\ cell\ in\ pixels\r\n\ @return\ Width\ of\ each\ cell\ in\ pixels\r\n
comment4.params=cellSize
comment4.target=void\ setCellSize(int)
comment4.text=\r\n\ Sets\ the\ width\ of\ each\ cell\ in\ pixels\ and\ updates\ the\ display\ for\ this\ GridView.\r\n\ @param\ cellSize\ Width\ of\ each\ cell\ in\ pixels.\r\n
comment5.params=
comment5.target=int\ getNumRows()
comment5.text=\r\n\ Returns\ the\ number\ of\ rows\ in\ this\ GridView\r\n\ @return\ Number\ of\ rows\ in\ this\ GridView\r\n
comment6.params=numRows
comment6.target=void\ setNumRows(int)
comment6.text=\r\n\ Sets\ the\ number\ of\ rows\ for\ this\ GridView\ and\ updates\ the\ display.\r\n\ @param\ numRows\ Number\ of\ rows\ in\ this\ GridView\r\n
comment7.params=
comment7.target=int\ getNumCols()
comment7.text=\r\n\ Returns\ the\ number\ of\ columns\ in\ this\ GridView\r\n\ @return\ Number\ of\ columns\ in\ this\ GridView\r\n
comment8.params=numCols
comment8.target=void\ setNumCols(int)
comment8.text=\r\n\ Sets\ the\ number\ of\ columns\ for\ this\ GridView\ and\ updates\ the\ display.\r\n\ @param\ numCols\ Number\ of\ columns\ in\ this\ GridView\r\n
comment9.params=
comment9.target=int\ getGridLineThickness()
comment9.text=\r\n\ Returns\ the\ thickness\ of\ the\ grid\ lines\ in\ pixels.\r\n\ @return\ Thickness\ of\ the\ grid\ lines\ in\ pixels.\r\n
numComments=23
