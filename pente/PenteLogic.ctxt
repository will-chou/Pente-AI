#BlueJ class context
comment0.params=b
comment0.target=PenteLogic(Board)
comment0.text=\r\n\ Constructs\ a\ new\ PenteLogic\ object\ using\ the\ official\ Board\ that\ Pente\ is\ being\ played\ on.\r\n\ @param\ b\ The\ official\ Board\ that\ Pente\ is\ being\ played\ on.\r\n
comment1.params=row\ col
comment1.target=boolean\ isEmpty(int,\ int)
comment1.text=\r\n\ Returns\ whether\ or\ not\ a\ position\ on\ the\ board\ is\ empty.\r\n\ @param\ row\ The\ row\ to\ check.\r\n\ @param\ col\ The\ column\ to\ check.\r\n\ @return\ Whether\ or\ not\ a\ position\ on\ the\ board\ is\ empty.\r\n
comment2.params=row\ col
comment2.target=boolean\ isInBounds(int,\ int)
comment2.text=\r\n\ Returns\ whether\ or\ not\ a\ position\ on\ the\ board\ is\ in\ bounds.\r\n\ @param\ row\ The\ row\ to\ check.\r\n\ @param\ col\ The\ column\ to\ check.\r\n\ @return\ Whether\ or\ not\ a\ position\ on\ the\ board\ is\ in\ bounds.\r\n
comment3.params=row\ col
comment3.target=boolean\ isOccupied(int,\ int)
comment3.text=\r\n\ Returns\ whether\ or\ not\ a\ position\ on\ the\ board\ is\ occupied\ by\ a\ player.\r\n\ @param\ row\ The\ row\ to\ check.\r\n\ @param\ col\ The\ column\ to\ check.\r\n\ @return\ Whether\ or\ not\ a\ position\ on\ the\ board\ is\ occupied\ by\ a\ player.\r\n
comment4.params=row\ col
comment4.target=boolean\ isAtBoardCenter(int,\ int)
comment4.text=\r\n\ Returns\ whether\ or\ not\ a\ position\ is\ at\ the\ center\ of\ the\ board.\r\n\ @param\ row\ The\ row\ to\ check.\r\n\ @param\ col\ The\ column\ to\ check.\r\n\ @return\ Whether\ or\ not\ a\ position\ is\ at\ the\ center\ of\ the\ board.\r\n
comment5.params=row\ col
comment5.target=boolean\ isOutsideStartBox(int,\ int)
comment5.text=\r\n\ Returns\ whether\ or\ not\ a\ position\ is\ at\ the\ center\ of\ the\ board.\r\n\ @param\ row\ The\ row\ to\ check.\r\n\ @param\ col\ The\ column\ to\ check.\r\n\ @return\ Whether\ or\ not\ a\ position\ is\ at\ the\ center\ of\ the\ board.\r\n
comment6.params=row\ col
comment6.target=GridObject\ getGridObjectAt(int,\ int)
comment6.text=\r\n\ Returns\ the\ GridObject\ at\ the\ given\ row,\ column.\ \ If\ no\ GridObject\ is\ at\ the\ specified\ location,\r\n\ either\ null\ or\ a\ GridObject\ with\ an\ ID\ of\ zero\ will\ be\ returned.\r\n\ @param\ row\ The\ row\ to\ check.\r\n\ @param\ col\ The\ column\ to\ check.\r\n\ @return\ The\ GridObject\ at\ the\ given\ row,\ column.\r\n
comment7.params=row\ col\ playerID
comment7.target=java.util.ArrayList\ capture(int,\ int,\ int)
comment7.text=\r\n\ Given\ a\ playerID\ piece\ played\ at\ (row,\ col),\ this\ method\ returns\ an\ ArrayList\ of\ Locations\r\n\ where\ opponent\ pieces\ will\ be\ captured,\ if\ any.\ The\ list\ is\ used\ by\ the\ PenteController\ to\r\n\ highlight\ the\ captured\ locations\ on\ the\ HighLightPanel.\r\n\ @param\ row\ The\ row\ to\ check.\r\n\ @param\ col\ The\ column\ to\ check.\r\n\ @param\ playerID\ The\ playerID\ to\ check\ for\ captures.\r\n\ @return\ An\ ArrayList\ of\ Locations\ representing\ where\ on\ the\ board\ pieces\ were\ captured.\r\n
comment8.params=row\ col\ playerID
comment8.target=java.util.ArrayList\ fiveInARow(int,\ int,\ int)
comment8.text=\r\n\ Given\ a\ playerID\ piece\ played\ at\ (row,\ col),\ this\ method\ returns\ an\ ArrayList\ of\ Locations\r\n\ where\ the\ player\ will\ win\ with\ 5-or-more-in-a-row,\ column,\ or\ diagonal,\ if\ any.\ The\ list\ is\r\n\ used\ by\ the\ PenteController\ to\ highlight\ where\ on\ the\ board\ a\ win\ has\ occurred.\r\n\ @param\ row\ Row\ to\ check\ win\ at\r\n\ @param\ col\ Column\ to\ check\ win\ at\r\n\ @param\ playerID\ PlayerID\ to\ check\ win\ for\r\n\ @return\ an\ ArrayList\ of\ Locations\ of\ the\ winning\ pieces\ or\ null\ if\ no\ win\ found\r\n
numComments=9
